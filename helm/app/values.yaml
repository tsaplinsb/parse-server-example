# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: cr.yandex/crp7qupp94a729rvpl8o/parse-server-example
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

## @section Common Parameters
##
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param kubeVersion Force target Kubernetes version (using Helm capabilites if not set)
##
kubeVersion: ""
## @param commonLabels Add labels to all the deployed resources
##
commonLabels: {}
## @param commonAnnotations Add annotations to all the deployed resources
##
commonAnnotations: {}
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 1337

ingress:
  enabled: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


dashboard:
  appid: myAppId
  ## @param dashboard.enabled Enable parse dashboard
  ##
  enabled: true
  ## Bitnami Parse Dashboard image version
  ## ref: https://hub.docker.com/r/bitnami/parse-dashboard/tags/
  ## @param dashboard.image.registry Dashboard image registry
  ## @param dashboard.image.repository Dashboard image repository
  ## @param dashboard.image.tag Dashboard image tag (immutable tags are recommended)
  ## @param dashboard.image.digest Dashboard image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param dashboard.image.pullPolicy image pull policy
  ## @param dashboard.image.pullSecrets Specify docker-registry secret names as an array
  ## @param dashboard.image.debug Enable Parse Dashboard image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/parse-dashboard
    tag: 5.0.0-debian-11-r36
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  ## @param dashboard.replicaCount Number of Parse Dashboard replicas to deploy
  ##
  replicaCount: 1
  ## @param dashboard.containerPorts.http Parse Dashboard HTTP container port
  ##
  containerPorts:
    http: 4040
  ## @param dashboard.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param dashboard.podSecurityContext.enabled Enabled Parse Dashboard pods' Security Context
  ## @param dashboard.podSecurityContext.fsGroup Set Parse Dashboard pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param dashboard.containerSecurityContext.enabled Enabled Parse Dashboard containers' Security Context
  ## @param dashboard.containerSecurityContext.runAsUser Set Parse Dashboard containers' Security Context runAsUser
  ## @param dashboard.containerSecurityContext.runAsNonRoot Set Parse Dashboard containers' Security Context runAsNonRoot
  ## @param dashboard.containerSecurityContext.readOnlyRootFilesystem Set Parse Dashboard containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false

  ## @param dashboard.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param dashboard.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param dashboard.username Parse Dashboard application username
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/parse-dashboard#configuration
  ##
  username: admin
  ## @param dashboard.password Parse Dashboard application password
  ## Defaults to a random 10-character alphanumeric string if not set
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/parse-dashboard#configuration
  ##
  password: "admin"
  ## @param dashboard.appName Parse Dashboard application name
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/parse-dashboard#configuration
  ##
  appName: MyDashboard
  ## @param dashboard.resources Parse Dashboard pods' resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
  ## Parse Dashboard pods' liveness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param dashboard.livenessProbe.enabled Enable livenessProbe
  ## @param dashboard.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param dashboard.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param dashboard.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param dashboard.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param dashboard.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## Parse Dashboard pods' liveness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param dashboard.readinessProbe.enabled Enable readinessProbe
  ## @param dashboard.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param dashboard.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param dashboard.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param dashboard.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param dashboard.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  ## @param dashboard.startupProbe.enabled Enable startupProbe on Parse Dashboard containers
  ## @param dashboard.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param dashboard.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param dashboard.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param dashboard.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param dashboard.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 0
    periodSeconds: 3
    timeoutSeconds: 2
    failureThreshold: 15
    successThreshold: 1
  ## @param dashboard.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param dashboard.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param dashboard.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## @param dashboard.podLabels Extra labels for Parse Dashboard pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param dashboard.podAnnotations Annotations for Parse Dashboard pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param dashboard.podAffinityPreset Parse dashboard pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param dashboard.podAntiAffinityPreset Parse dashboard pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ## Allowed values: soft, hard
  ##
  nodeAffinityPreset:
    ## @param dashboard.nodeAffinityPreset.type Parse dashboard node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param dashboard.nodeAffinityPreset.key Parse dashboard node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param dashboard.nodeAffinityPreset.values Parse dashboard node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param dashboard.affinity Parse dashboard affinity for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: dashboard.podAffinityPreset, dashboard.podAntiAffinityPreset, and dashboard.nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param dashboard.nodeSelector Parse dashboard node labels for pod assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param dashboard.tolerations Parse dashboard tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param dashboard.updateStrategy.type Parse statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate
  ## @param dashboard.priorityClassName Parse pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param dashboard.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param dashboard.schedulerName Name of the k8s scheduler (other than default) for Parse pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param dashboard.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param dashboard.lifecycleHooks for the Parse container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}

  ## @param dashboard.parseServerUrlProtocol Protocol used by Parse Dashboard to form the URLs to Parse server
  ##
  parseServerUrlProtocol: "http"
  ## @param dashboard.extraEnvVars An array to add extra env vars
  ## For example:
  ## extraEnvVars:
  ##  - name: KIBANA_ELASTICSEARCH_URL
  ##    value: test
  ##
  extraEnvVars: []
  ## @param dashboard.extraEnvVarsCM Name of a ConfigMap containing extra environment variables
  ##
  extraEnvVarsCM: ""
  ## @param dashboard.extraEnvVarsSecret Name of a Secret containing extra environment variables
  ##
  extraEnvVarsSecret: ""
  ## @param dashboard.extraVolumes Optionally specify extra list of additional volumes for the Parse pod(s)
  ##
  extraVolumes: []
  ## @param dashboard.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Parse container(s)
  ##
  extraVolumeMounts: []
  ## @param dashboard.sidecars Add additional sidecar containers to the Parse pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param dashboard.initContainers Add additional init containers to the Parse pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
    ## Kubernetes service for Parse Server Deployment
  ## ref: https://kubernetes.io/docs/user-guide/services/#publishing-services---service-types
  ##
  service:
    ## @param dashboard.service.type Kubernetes Service type
    ##
    type: NodePort
    ## @param dashboard.service.ports.http Service HTTP port (Dashboard)
    ##
    ports:
      http: 8080
    ## @param dashboard.service.nodePorts.http Kubernetes HTTP node port
    ## nodePorts:
    ##   http: <to set explicitly, choose port between 30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param dashboard.service.clusterIP Service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param dashboard.service.loadBalancerIP Service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param dashboard.service.loadBalancerSourceRanges Service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param dashboard.service.externalTrafficPolicy Service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param dashboard.service.annotations Additional custom annotations for Service
    ##
    annotations: {}
    ## @param dashboard.service.extraPorts Extra ports to expose in Service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param dashboard.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/user-guide/services/
    ##
    sessionAffinity: None
    ## @param dashboard.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}


